{"version":3,"file":"swipe-back-DB6KeXNC.js","sources":["../node_modules/@ionic/core/components/gesture-controller.js","../node_modules/@ionic/core/components/index3.js","../node_modules/@ionic/core/components/dir.js","../node_modules/@ionic/core/components/swipe-back.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n    constructor() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    createGesture(config) {\n        var _a;\n        return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\n    }\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    createBlocker(opts = {}) {\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    }\n    start(gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    }\n    capture(gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        const requestedStart = this.requestedStart;\n        let maxPriority = -10000;\n        requestedStart.forEach((value) => {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    }\n    release(id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    }\n    disableGesture(gestureName, id) {\n        let set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    }\n    enableGesture(gestureName, id) {\n        const set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    }\n    disableScroll(id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    }\n    enableScroll(id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    }\n    canStart(gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    }\n    isCaptured() {\n        return this.capturedId !== undefined;\n    }\n    isScrollDisabled() {\n        return this.disabledScroll.size > 0;\n    }\n    isDisabled(gestureName) {\n        const disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    }\n    newID() {\n        this.gestureId++;\n        return this.gestureId;\n    }\n}\nclass GestureDelegate {\n    constructor(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    canStart() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    }\n    start() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    }\n    capture() {\n        if (!this.ctrl) {\n            return false;\n        }\n        const captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    }\n    release() {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    }\n    destroy() {\n        this.release();\n        this.ctrl = undefined;\n    }\n}\nclass BlockerDelegate {\n    constructor(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    block() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    }\n    unblock() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    }\n    destroy() {\n        this.unblock();\n        this.ctrl = undefined;\n    }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nexport { BACKDROP_NO_SCROLL as B, GESTURE_CONTROLLER as G };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\n\nconst addEventListener = (el, // TODO(FW-2832): type\neventName, callback, opts) => {\n    // use event listener options when supported\n    // otherwise it's just a boolean for the \"capture\" arg\n    const listenerOpts = supportsPassive(el)\n        ? {\n            capture: !!opts.capture,\n            passive: !!opts.passive,\n        }\n        : !!opts.capture;\n    let add;\n    let remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return () => {\n        el[remove](eventName, callback, listenerOpts);\n    };\n};\nconst supportsPassive = (node) => {\n    if (_sPassive === undefined) {\n        try {\n            const opts = Object.defineProperty({}, 'passive', {\n                get: () => {\n                    _sPassive = true;\n                },\n            });\n            node.addEventListener('optsTest', () => {\n                return;\n            }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n    let rmTouchStart;\n    let rmTouchMove;\n    let rmTouchEnd;\n    let rmTouchCancel;\n    let rmMouseStart;\n    let rmMouseMove;\n    let rmMouseUp;\n    let lastTouchEvent = 0;\n    const handleTouchStart = (ev) => {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        /**\n         * Events are dispatched on the element that is tapped and bubble up to\n         * the reference element in the gesture. In the event that the element this\n         * event was first dispatched on is removed from the DOM, the event will no\n         * longer bubble up to our reference element. This leaves the gesture in an\n         * unusable state. To account for this, the touchend and touchcancel listeners\n         * should be added to the event target so that they still fire even if the target\n         * is removed from the DOM.\n         */\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n        }\n    };\n    const handleMouseDown = (ev) => {\n        if (lastTouchEvent > Date.now()) {\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    };\n    const handleTouchEnd = (ev) => {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const handleMouseUp = (ev) => {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const stopTouch = () => {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    };\n    const stopMouse = () => {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    };\n    const stop = () => {\n        stopTouch();\n        stopMouse();\n    };\n    const enable = (isEnabled = true) => {\n        if (!isEnabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    };\n    const destroy = () => {\n        enable(false);\n        pointerUp = pointerMove = pointerDown = undefined;\n    };\n    return {\n        enable,\n        stop,\n        destroy,\n    };\n};\nconst getDocument = (node) => {\n    return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n    const radians = maxAngle * (Math.PI / 180);\n    const isDirX = direction === 'x';\n    const maxCosine = Math.cos(radians);\n    const threshold = thresh * thresh;\n    let startX = 0;\n    let startY = 0;\n    let dirty = false;\n    let isPan = 0;\n    return {\n        start(x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect(x, y) {\n            if (!dirty) {\n                return false;\n            }\n            const deltaX = x - startX;\n            const deltaY = y - startY;\n            const distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            const hypotenuse = Math.sqrt(distance);\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture() {\n            return isPan !== 0;\n        },\n        getDirection() {\n            return isPan;\n        },\n    };\n};\n\n// TODO(FW-2832): types\nconst createGesture = (config) => {\n    let hasCapturedPan = false;\n    let hasStartedPan = false;\n    let hasFiredStart = true;\n    let isMoveQueued = false;\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    const canStart = finalConfig.canStart;\n    const onWillStart = finalConfig.onWillStart;\n    const onStart = finalConfig.onStart;\n    const onEnd = finalConfig.onEnd;\n    const notCaptured = finalConfig.notCaptured;\n    const onMove = finalConfig.onMove;\n    const threshold = finalConfig.threshold;\n    const passive = finalConfig.passive;\n    const blurOnStart = finalConfig.blurOnStart;\n    const detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTime: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        currentTime: 0,\n        event: undefined,\n        data: undefined,\n    };\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    const gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll,\n    });\n    const pointerDown = (ev) => {\n        const timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        // Check if gesture can start\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        // Release fallback\n        gesture.release();\n        // Start gesture\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    };\n    const pointerMove = (ev) => {\n        // fast path, if gesture is currently captured\n        // do minimum job to get user-land even dispatched\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                requestAnimationFrame(fireOnMove);\n            }\n            return;\n        }\n        // gesture is currently being detected\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    };\n    const fireOnMove = () => {\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\n        // we must double check hasCapturedPan\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    };\n    const tryToCapturePan = () => {\n        if (!gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        // reset start position since the real user-land event starts here\n        // If the pan detector threshold is big, not resetting the start position\n        // will cause a jump in the animation equal to the detector threshold.\n        // the array of positions used to calculate the gesture velocity does not\n        // need to be cleaned, more points in the positions array always results in a\n        // more accurate value of the velocity.\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    };\n    const blurActiveElement = () => {\n        if (typeof document !== 'undefined') {\n            const activeElement = document.activeElement;\n            if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n                activeElement.blur();\n            }\n        }\n    };\n    const fireOnStart = () => {\n        if (blurOnStart) {\n            blurActiveElement();\n        }\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    };\n    const reset = () => {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    };\n    // END *************************\n    const pointerUp = (ev) => {\n        const tmpHasCaptured = hasCapturedPan;\n        const tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        // Try to capture press\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        // Not captured any event\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        capture: false,\n        passive,\n    });\n    const abortGesture = () => {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    return {\n        enable(enable = true) {\n            if (!enable) {\n                if (hasCapturedPan) {\n                    pointerUp(undefined);\n                }\n                reset();\n            }\n            pointerEvents.enable(enable);\n        },\n        destroy() {\n            gesture.destroy();\n            pointerEvents.destroy();\n        },\n    };\n};\nconst calcGestureData = (detail, ev) => {\n    if (!ev) {\n        return;\n    }\n    const prevX = detail.currentX;\n    const prevY = detail.currentY;\n    const prevT = detail.currentTime;\n    updateDetail(ev, detail);\n    const currentX = detail.currentX;\n    const currentY = detail.currentY;\n    const timestamp = (detail.currentTime = now(ev));\n    const timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        const velocityX = (currentX - prevX) / timeDelta;\n        const velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    let x = 0;\n    let y = 0;\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nconst isRTL = (hostEl) => {\n    if (hostEl) {\n        if (hostEl.dir !== '') {\n            return hostEl.dir.toLowerCase() === 'rtl';\n        }\n    }\n    return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n\nexport { isRTL as i };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { k as clamp } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { createGesture } from './index3.js';\n\nconst createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\n    const win = el.ownerDocument.defaultView;\n    let rtl = isRTL(el);\n    /**\n     * Determine if a gesture is near the edge\n     * of the screen. If true, then the swipe\n     * to go back gesture should proceed.\n     */\n    const isAtEdge = (detail) => {\n        const threshold = 50;\n        const { startX } = detail;\n        if (rtl) {\n            return startX >= win.innerWidth - threshold;\n        }\n        return startX <= threshold;\n    };\n    const getDeltaX = (detail) => {\n        return rtl ? -detail.deltaX : detail.deltaX;\n    };\n    const getVelocityX = (detail) => {\n        return rtl ? -detail.velocityX : detail.velocityX;\n    };\n    const canStart = (detail) => {\n        /**\n         * The user's locale can change mid-session,\n         * so we need to check text direction at\n         * the beginning of every gesture.\n         */\n        rtl = isRTL(el);\n        return isAtEdge(detail) && canStartHandler();\n    };\n    const onMove = (detail) => {\n        // set the transition animation's progress\n        const delta = getDeltaX(detail);\n        const stepValue = delta / win.innerWidth;\n        onMoveHandler(stepValue);\n    };\n    const onEnd = (detail) => {\n        // the swipe back gesture has ended\n        const delta = getDeltaX(detail);\n        const width = win.innerWidth;\n        const stepValue = delta / width;\n        const velocity = getVelocityX(detail);\n        const z = width / 2.0;\n        const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\n        const missing = shouldComplete ? 1 - stepValue : stepValue;\n        const missingDistance = missing * width;\n        let realDur = 0;\n        if (missingDistance > 5) {\n            const dur = missingDistance / Math.abs(velocity);\n            realDur = Math.min(dur, 540);\n        }\n        onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\n    };\n    return createGesture({\n        el,\n        gestureName: 'goback-swipe',\n        /**\n         * Swipe to go back should have priority over other horizontal swipe\n         * gestures. These gestures have a priority of 100 which is why 101 was chosen here.\n         */\n        gesturePriority: 101,\n        threshold: 10,\n        canStart,\n        onStart: onStartHandler,\n        onMove,\n        onEnd,\n    });\n};\n\nexport { createSwipeBackGesture };\n"],"names":["GestureController","config","_a","GestureDelegate","opts","BlockerDelegate","gestureName","id","priority","requestedStart","maxPriority","value","event","set","BACKDROP_NO_SCROLL","disabled","ctrl","name","disableScroll","captured","disable","gesture","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","listenerOpts","supportsPassive","add","remove","node","_sPassive","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","createPanRecognizer","direction","thresh","maxAngle","radians","isDirX","maxCosine","threshold","startX","startY","dirty","isPan","x","deltaX","deltaY","distance","hypotenuse","cosine","createGesture","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","passive","blurOnStart","detail","pan","timeStamp","now","updateDetail","tryToCapturePan","calcGestureData","fireOnMove","abortGesture","fireOnStart","blurActiveElement","activeElement","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","currentX","currentY","timeDelta","velocityX","velocityY","y","changedTouches","touch","isRTL","hostEl","createSwipeBackGesture","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","rtl","isAtEdge","getDeltaX","getVelocityX","stepValue","delta","width","velocity","z","shouldComplete","missingDistance","realDur","dur","clamp"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}