{"version":3,"file":"swipe-back-CCLhtuv4.js","sources":["../node_modules/@ionic/core/components/swipe-back.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { k as clamp } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { createGesture } from './index3.js';\n\nconst createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\n    const win = el.ownerDocument.defaultView;\n    let rtl = isRTL(el);\n    /**\n     * Determine if a gesture is near the edge\n     * of the screen. If true, then the swipe\n     * to go back gesture should proceed.\n     */\n    const isAtEdge = (detail) => {\n        const threshold = 50;\n        const { startX } = detail;\n        if (rtl) {\n            return startX >= win.innerWidth - threshold;\n        }\n        return startX <= threshold;\n    };\n    const getDeltaX = (detail) => {\n        return rtl ? -detail.deltaX : detail.deltaX;\n    };\n    const getVelocityX = (detail) => {\n        return rtl ? -detail.velocityX : detail.velocityX;\n    };\n    const canStart = (detail) => {\n        /**\n         * The user's locale can change mid-session,\n         * so we need to check text direction at\n         * the beginning of every gesture.\n         */\n        rtl = isRTL(el);\n        return isAtEdge(detail) && canStartHandler();\n    };\n    const onMove = (detail) => {\n        // set the transition animation's progress\n        const delta = getDeltaX(detail);\n        const stepValue = delta / win.innerWidth;\n        onMoveHandler(stepValue);\n    };\n    const onEnd = (detail) => {\n        // the swipe back gesture has ended\n        const delta = getDeltaX(detail);\n        const width = win.innerWidth;\n        const stepValue = delta / width;\n        const velocity = getVelocityX(detail);\n        const z = width / 2.0;\n        const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\n        const missing = shouldComplete ? 1 - stepValue : stepValue;\n        const missingDistance = missing * width;\n        let realDur = 0;\n        if (missingDistance > 5) {\n            const dur = missingDistance / Math.abs(velocity);\n            realDur = Math.min(dur, 540);\n        }\n        onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\n    };\n    return createGesture({\n        el,\n        gestureName: 'goback-swipe',\n        /**\n         * Swipe to go back should have priority over other horizontal swipe\n         * gestures. These gestures have a priority of 100 which is why 101 was chosen here.\n         */\n        gesturePriority: 101,\n        threshold: 10,\n        canStart,\n        onStart: onStartHandler,\n        onMove,\n        onEnd,\n    });\n};\n\nexport { createSwipeBackGesture };\n"],"names":["createSwipeBackGesture","el","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","rtl","isRTL","isAtEdge","detail","startX","getDeltaX","getVelocityX","createGesture","stepValue","delta","width","velocity","z","shouldComplete","missingDistance","realDur","dur","clamp"],"mappings":";AAAA;AAAA;AAAA;AAOK,MAACA,IAAyB,CAACC,GAAIC,GAAiBC,GAAgBC,GAAeC,MAAiB;AACjG,QAAMC,IAAML,EAAG,cAAc;AAC7B,MAAIM,IAAMC,EAAMP,CAAE;AAMlB,QAAMQ,IAAW,CAACC,MAAW;AAEzB,UAAM,EAAE,QAAAC,EAAQ,IAAGD;AACnB,WAAIH,IACOI,KAAUL,EAAI,aAAa,KAE/BK,KAAU;AAAA,EACzB,GACUC,IAAY,CAACF,MACRH,IAAM,CAACG,EAAO,SAASA,EAAO,QAEnCG,IAAe,CAACH,MACXH,IAAM,CAACG,EAAO,YAAYA,EAAO;AAkC5C,SAAOI,EAAc;AAAA,IACjB,IAAAb;AAAA,IACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKb,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,UAzCa,CAACS,OAMdH,IAAMC,EAAMP,CAAE,GACPQ,EAASC,CAAM,KAAKR;IAmC3B,SAASC;AAAA,IACT,QAlCW,CAACO,MAAW;AAGvB,YAAMK,IADQH,EAAUF,CAAM,IACJJ,EAAI;AAC9B,MAAAF,EAAcW,CAAS;AAAA,IAC/B;AAAA,IA8BQ,OA7BU,CAACL,MAAW;AAEtB,YAAMM,IAAQJ,EAAUF,CAAM,GACxBO,IAAQX,EAAI,YACZS,IAAYC,IAAQC,GACpBC,IAAWL,EAAaH,CAAM,GAC9BS,IAAIF,IAAQ,GACZG,IAAiBF,KAAY,MAAMA,IAAW,OAAOF,IAAQG,IAE7DE,KADUD,IAAiB,IAAIL,IAAYA,KACfE;AAClC,UAAIK,IAAU;AACd,UAAID,IAAkB,GAAG;AACrB,cAAME,IAAMF,IAAkB,KAAK,IAAIH,CAAQ;AAC/C,QAAAI,IAAU,KAAK,IAAIC,GAAK,GAAG;AAAA,MAC9B;AACD,MAAAlB,EAAae,GAAgBL,KAAa,IAAI,OAAOS,EAAM,GAAGT,GAAW,MAAM,GAAGO,CAAO;AAAA,IACjG;AAAA,EAcA,CAAK;AACL;","x_google_ignoreList":[0]}